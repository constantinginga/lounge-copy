@using System.Text.Json
@using ScSoMe.RazorLibrary.Pages.Components.FreeUser
@inject ApiClientFactory apiClientFactory
@inject AppState AppState
@inject IDialogService DialogService
@using ScSoMe.RazorLibrary.Pages.Components.AttachFiles

@code {
    //public int GroupId { get; set; }
    public QuillEditor? InRef { get; set; }
    private API.ScSoMeApi client { get; set; }
    public AttachFile attachFile { get; set; }

    public async Task<API.Post> CreatePost(int groupId, bool? privacySetting)
    {
        var client = apiClientFactory.GetApiClient();
        //_processing = true;
        //API.ScGroup? selectedGroup = groups.FirstOrDefault(g => g.GroupName == groupValue);
        if (InRef != null)
        {
            string val = await InRef.GetHTML();
            Console.WriteLine("FROM NewPostBase.Razor: " + val + "    " + groupId);
            if (string.IsNullOrEmpty(val) || string.IsNullOrWhiteSpace(val)) return null;

            long newPostId = await client.CreatePostAsync(groupId, AppState.IsMediaAttached, new API.WriteMessage() { Text = val }, privacySetting);

            API.Post? newPost = await client.GetPostWithCommentsAsync(newPostId);
            newPost.Text = newPost.Text.Replace("?<span contenteditable=\"false\">", "<span contenteditable=\"false\">");
            newPost.Text = newPost.Text.Replace("</span>?</span>", "</span></span>");
            await CreateEmbedded(newPostId);
            // where does this value go? no one knows...
            await InRef.LoadContent("123");

            //await AttachMedia(newPost);

            return newPost;
        }
        return null;
    }

    private async Task CreateEmbedded(long id)
    {
        var client = apiClientFactory.GetApiClient();
        string embeddedStr = await InRef.GetEmbedded();
        if (embeddedStr != null)
        {
            API.Embedded Embedded = JsonSerializer.Deserialize<API.Embedded>(embeddedStr);
            if (Embedded.Url != null && Embedded.Img != null && Embedded.Title != null)
            {
                await client.CreateEmbeddedAsync(id, Embedded);
                await InRef.ClearEmbedded();
                Embedded = null;
            }
        }
    }

    private async Task AttachMedia(API.Post newPost)
    {
        var client = apiClientFactory.GetApiClient();

        if (attachFile.medias != null && attachFile.medias.Count() > 0)
        {
            await attachFile.UploadToServer(attachFile.medias, newPost.Id);
            //await client.SetPostHasMediaAsync(newPost.Id);
            //newPost.HasMedia = true;
        }

        //if (newPost.HasMedia == true)
        //{
            try
            {
                var media = await client.GetPostBlobsAsync((int?)newPost.Id);
                if (media != null && media.Count != 0)
                {
                    foreach (var m in media)
                    {
                        Console.WriteLine(m.ContentType);
                        if (m.ContentType.Contains("video", StringComparison.InvariantCultureIgnoreCase))
                        {
                            newPost.Text += $"<video controls class=\"attached-media-video\"><source src={m.Uri}></video>";
                        }
                        else
                        {
                            newPost.Text += $"<a href={m.Uri} target=\"_blank\" class=\"attached-media-container\"><img src={m.Uri} alt=\"Attached image\" class=\"attached-media-img\" /></a>";
                        }
                        await client.EditTextAsync(new API.WriteMessage { Id = newPost.Id, Text = newPost.Text });

                        AppState.IsMediaAttached = false;
                    }
                }
            }
            catch (Exception e)
            {
                //
            }
        //}
    }
}

